/* ----------------
 * Groups for Rooms
 * ----------------
 */
Group gWH	"Wohnung"				<firstfloor>
Group gWZ	"Wohnzimmer"			<sofa>		(gWH)
Group gEZ   "Esszimmer"				<terrace>   (gWH)
Group gFL   "Flur"					<corridor>	(gWH)
Group gKU   "Küche"					<kitchen>	(gWH)
Group gYZ   "Yara's Zimmer"		<bedroom>	(gWH)
Group gMZ   "Milas's Zimmer"		<bedroom>	(gWH)
Group gSZ	"Schlafzimmer"			<bedroom>	(gWH)
Group gBZ	"Badezimmer"			<bath>		(gWH)
Group gSO	"Sonos"					<receiver>
Group gAC	"Sonos Wecker"			<clock>		(gSO)	
Group gAS	"Astro Daten"			<moon>
Group gWE	"Wetter-Daten"			<sun_clouds>
Group gHZ	"Heizung"				<heating>
Group gKL	"Kalender"				<calendar>
/* --------------------------------------------------
 * A Chart
 * To choose a proper chart period in a sitemap
 * mappings=[0="Tag", 1="Woche", 2="Monat", 3="Jahr"]
 * --------------------------------------------------
 * */
Number chart_period "Graph Zeitraum"
/* 
 * -------------
 * active groups
 * -------------
 */
//Group:Switch:OR(ON, OFF)			gLights				"Alle Lampen  [(%d)]"						<light>
//Group:Switch:OR(ON, OFF)			gHeating				"Aktive Heizungen  [(%d)]"					<heating>
//Group:Number:AVG					gTemperature_EZ	"∅-Temperatur Wohnzimmer  [%.1f °C]"	<temperature>   
//Group:Contact:OR(OPEN, CLOSED)	gWindows				"Fenster  [%d]"								<contact>
Group:Contact:OR(OPEN, CLOSED)	gDoors				"Türen  [%d]"									<door>
Group:Switch:OR(ON, OFF)			gAlarm				"Alarm"											<siren>
Group:Switch:OR(ON, OFF) 			gNetwork				"Netzwerk"										<network>
Group:Switch:OR(ON, OFF)			gDevices				"Geräte-Status [%d]"							<status>
Group:Switch:OR(ON, OFF)			gLightsEZ			"Licht im Esszimmer"							<light>
Group:Switch:OR(ON, OFF)			gSonos				"Sonos AN / AUS"								<switch>
/* 
 * --------
 * Node RED
 * --------
 */
// Alarm Clock
// Selected in HABPanel for choosing the wake up time
Number vNRTime "Weckzeit"
Number vNRDay "Wochentag"
Switch vNRSetDuration "Dauerhaft"
Switch vNRStartAlarmClockONE "Wecker"
Switch vNRStartAlarmClockPLAY11 "Wecker"
/* 
 * --------
 * Calendar
 * --------
 */
// Alarm Clock events
String	dCalDav_Wecker_NextEvent      "W1[%s]"		   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:1 value:NAMEANDTIME" }
String	dCalDav_Wecker_Event_Name     "Termin[%s]"   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:1 value:NAME" }
DateTime	dCalDav_Wecker_Event_Start    "Begin[%s]"	   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:1 value:START" }
// DateTime	dCalDav_Wecker_Event_End   "Ende[%s]"  	<calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:1 value:END" }
String	dCalDav_Wecker_NextEvent2     "W2[%s]"		   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:2 value:NAMEANDTIME" }
String	dCalDav_Wecker_Event2_Name    "Termin[%s]"   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:2 value:NAME" }
DateTime	dCalDav_Wecker_Event2_Start   "Begin[%s]"	   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:2 value:START" }
String	dCalDav_Wecker_NextEvent3     "W3[%s]"		   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:3 value:NAMEANDTIME" }
String	dCalDav_Wecker_Event3_Name    "Termin[%s]"   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:3 value:NAME" }
DateTime	dCalDav_Wecker_Event3_Start   "Begin[%s]"	   <calendar>	(gAC, gKL)				{caldavPersonal="calendar:Wecker type:EVENT eventNr:3 value:START" }
/* 
 * -------
 * heating
 * -------
 */
// Setzen der Heiz- und Absenkperioden über den Google Kalender
Switch	vSwitchHeating_CalDav	"Heizung über Google Kalender steuern" <switch>
// Switch zum Einschalter der Heizung im WZ
Switch	vSwitchHeating_WZ			"Heizung AN/AUS"					<switch>
// Switch zum Umschalten zwischen auto. und manu. Betrieb im WZ
Switch	vSwitchOpMo_WZ				"manueller/autom. Betrieb"		<clock>	
// Item für die Steuerung der Anzeige (sitemap) für den manuellen Modus	      
Switch	vShowSetPointWZ_manu		"Sollwert - Anzeige"				<xheating>			
// Steuerung für den manuellen und automatischen Betrieb
Number	vSetPointWZ					"Sollwert [%s °C]"				<xheating>		    
Number	vSetPointWZ_normal		"Sollwert Heizen [%s °C]"		<xheating>		    
Number	vSetPointWZ_absenken		"Sollwert Absenken [%s °C]"	<xheating>		    
Number	vSetPointWZ_manu			"Sollwert Manu. [%s °C]"		<xheating>	    
// Thermostate
Number 	dThermostat_WZ			"Thermostat WZ [%.1f °C]"		   <xheating> 	(gWZ, gHZ)	   {channel="zwave:device:7b5154ec:node21:thermostat_setpoint_heating"}
Number   dThermostat_WZ_Batt  "Thermostat WZ Battery [%.1f] "  <batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node21:battery-level"}
//Number 	dThermostat_EZ			"Thermostat EZ [%.1f °C]"		<xheating> 	(gEZ, gHZ)
/* 
 * ------
 * lights
 * ------
 */
//  - Alexa
Dimmer dDimmer_WZ		"Wohnzimmerlicht"	<light>	(gWZ)	["Lighting"]	{channel="zwave:device:7b5154ec:node22:switch_dimmer"}
Dimmer dDimmer_FL		"Flurlicht"			<light>	(gFL)	["Lighting"]	{channel="zwave:device:7b5154ec:node29:switch_dimmer"}
// HUE Esszimmer
Dimmer	vDimmer_HUE_EZ			"Esszimmer-Dimmer"							(gEZ)
Switch	vSwitch_HUE_EZ			"Esszimmer-Lichtschalter"					(gEZ)
Dimmer	vColorTemp_HUE_EZ		"Esszimmer-Farbtemperatur"		<colorlight> (gEZ)
//
Dimmer	dDimmer_HUE_EZ_L		"EsszimmerdimmerHueL"	<light> 			(gEZ) { channel="hue:0220:001788678799:6:brightness" }
Switch	dSwitch_HUE_EZ_L		"EsszimmerlichtHueL"		<switch>			(gEZ, gLightsEZ)	{ channel="hue:0220:001788678799:6:brightness" }
Dimmer	dColorTemp_HUE_EZ_L	"ColorTempHueL"			<colorlight> 	(gEZ)						{ channel="hue:0220:001788678799:6:color_temperature" }
Dimmer	dDimmer_HUE_EZ_M		"EsszimmerdimmerHueM"	<light> 			(gEZ)						{ channel="hue:0220:001788678799:7:brightness" }
Switch	dSwitch_HUE_EZ_M		"EsszimmerlichtHueM"		<switch>			(gEZ, gLightsEZ)		{ channel="hue:0220:001788678799:7:brightness" }
Dimmer	dColorTemp_HUE_EZ_M	"ColorTempHueM"			<colorlight> 	(gEZ)						{ channel="hue:0220:001788678799:7:color_temperature" }
Dimmer	dDimmer_HUE_EZ_R		"EsszimmerdimmerHueR"	<light> 			(gEZ)						{ channel="hue:0220:001788678799:8:brightness" }
Switch	dSwitch_HUE_EZ_R		"EsszimmerlichtHueR"		<switch>			(gEZ, gLightsEZ)		{ channel="hue:0220:001788678799:8:brightness" }
Dimmer	dColorTemp_HUE_EZ_R	"ColorTempHueR"			<colorlight> 	(gEZ)						{ channel="hue:0220:001788678799:8:color_temperature" }
// HUE Mila
Switch	dSwitch_HUE_MZ		"Milalicht"				<switch>				(gMZ)    	{ channel="hue:0210:001788678799:1:color" }
Dimmer	dDimmer_HUE_MZ		"Miladimmer"			<light> 				(gMZ)			{ channel="hue:0210:001788678799:1:color" }
Color		dColor_HUE_MZ 		"ColorPicker"			<colorpicker> 		(gMZ)			{ channel="hue:0210:001788678799:1:color" }
Dimmer	dColorTemp_HUE_MZ "ColorTemp"				<colorlight> 		(gMZ)			{ channel="hue:0210:001788678799:1:color_temperature" }
String	dAlert_HUE_MZ		"Alert"					<switch> 			(gMZ)			{ channel="hue:0210:001788678799:1:alert" }
Switch	dEffect_HUE_MZ		"Effect"					<switch> 			(gMZ)			{ channel="hue:0210:001788678799:1:effect" }
// HUE Schlafzimmer
Switch	dSwitch_HUE_SZ		"Schlafzimmerlicht"	<switch>				(gSZ)		{ channel="hue:0220:001788678799:5:brightness" }
Dimmer	dDimmer_HUE_SZ		"Schlafzimmerdimmer"	<light> 	(gSZ)					{ channel="hue:0220:001788678799:5:brightness" }
Dimmer	dColorTemp_HUE_SZ "ColorTempHueSZ"		<colorlight> 		(gSZ)		{ channel="hue:0220:001788678799:5:color_temperature" }
// HUE Iris Wohnzimmer
Switch	dSwitch_HUE_WZ		"Iris Wohnzimmer"		<switch>				(gWZ)		{ channel="hue:0200:001788678799:4:color" }
Dimmer	dDimmer_HUE_WZ		"Iris Dimmer"			<light> 	(gWZ)					{ channel="hue:0200:001788678799:4:color" }
Color		dColor_HUE_WZ 		"ColorPickerHueWZ"	<colorpicker> 		(gWZ)		{ channel="hue:0200:001788678799:4:color" }
// HUE Flur links
Switch	dSwitch_HUE_FL_L		"Flurlicht L"		<switch>				(gFL)		{ channel="hue:0210:001788678799:2:color" }
Dimmer	dDimmer_HUE_FL_L		"Flurdimmer L" 	<light>	(gFL)					{ channel="hue:0210:001788678799:2:color" }
Color		dColor_HUE_FL_L		"ColorPicker L"	<colorpicker>		(gFL)		{ channel="hue:0210:001788678799:2:color" }
Dimmer	dColorTemp_HUE_FL_L	"ColorTemp L"		<colorlight>		(gFL)		{ channel="hue:0210:001788678799:2:color_temperature" }
String	dAlert_HUE_FL_L		"Alert L"			<switch>				(gFL)		{ channel="hue:0210:001788678799:2:alert" }
Switch	dEffect_HUE_FL_L		"Effect L"			<switch>				(gFL)		{ channel="hue:0210:001788678799:2:effect" }
// HUE Flur rechts
Switch	dSwitch_HUE_FL_R		"Flurlicht R"		<switch>				(gFL)		{ channel="hue:0210:001788678799:3:color" }
Dimmer	dDimmer_HUE_FL_R		"Flurdimmer R" 	<light>	(gFL)					{ channel="hue:0210:001788678799:3:color" }
Color		dColor_HUE_FL_R		"ColorPicker R"	<colorpicker>		(gFL)		{ channel="hue:0210:001788678799:3:color" }
Dimmer	dColorTemp_HUE_FL_R	"ColorTemp R"		<colorlight>		(gFL)		{ channel="hue:0210:001788678799:3:color_temperature" }
String	dAlert_HUE_FL_R		"Alert R"			<switch>				(gFL)		{ channel="hue:0210:001788678799:3:alert" }
Switch	dEffect_HUE_FL_R		"Effect R"			<switch>				(gFL)		{ channel="hue:0210:001788678799:3:effect" }
// HUE variables
Switch vHUECalDav_MZ_OnOff	"Milas Licht"			<switch>
Number vHUECalDav_WasteTyp	"Abfallart"				<switch>
Switch vHUECaDav_GreenWaste "Biomuell"				<switch>
/* 
 * --------
 * switches
 * --------
 */
Number dWallMoteQuad2			"WallMote Quad [%.1f]"							<switch>							{channel="zwave:device:7b5154ec:node42:scene_number"}
Number dWallMoteQuad2_Battery	"WallMote Quad Battery [%.1f]"				<batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node42:battery-level"}
Number dKeyController			"KFOB Scene [%.1f]"								<switch>							{channel="zwave:device:7b5154ec:node32:scene_number"}
Number dKeyController_Battery	"KFOB Battery [%.1f]"							<batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node32:battery-level"}
Number dTheButton					"TheButton [%d]"									<switch>							{channel="zwave:device:7b5154ec:node7:scene_number"}
Number dTheButton_Battery		"TheButton Battery [%.1f]"						<batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node7:battery-level"}
Switch dPlugSwitch_SZ 			"Steckdosen Schalter Schlafzimmer [%s]"	<poweroutlet_eu>	(gSZ, gSO, gSonos)	{channel="zwave:device:7b5154ec:node35:switch_binary"}
Number dPlugSwitch_SZ_Power	"Leistung Steckdosenschalter SZ [%.1f]" 	<line>			(gSZ, gSO)	{channel="zwave:device:7b5154ec:node35:meter_watts"}
Switch dPlugSwitch_WZ 			"Steckdosen Schalter Wohnzimmer [%s]"		<poweroutlet_eu>	(gWZ, gSO, gSonos)	{channel="zwave:device:7b5154ec:node6:switch_binary"}
Number dPlugSwitch_WZ_Power	"Leistung Steckdosenschalter WZ [%.1f]" 	<line>			(gWZ, gSO)	{channel="zwave:device:7b5154ec:node6:meter_watts"}
Switch dPlugSwitch_EZ 			"Steckdosen Schalter Esszimmer [%s]" 		<poweroutlet_eu>	(gEZ, gSO, gSonos)	{channel="zwave:device:7b5154ec:node2:switch_binary"}
Number dPlugSwitch_EZ_Power	"Leistung Steckdosenschalter EZ [%.1f]" 	<line>			(gEZ, gSO)	{channel="zwave:device:7b5154ec:node2:meter_watts"}
Switch dPlugSwitch_BZ 			"Steckdosen Schalter Badezimmer [%s]"		<poweroutlet_eu>	(gBZ, gSO, gSonos)	{channel="zwave:device:7b5154ec:node34:switch_binary"}
Number dPlugSwitch_BZ_Power	"Leistung Steckdosenschalter BD [%.1f]" 	<line>			(gBZ, gSO)	{channel="zwave:device:7b5154ec:node34:meter_watts"}
Switch dWallSwitch_WZ			"Wandschalter WZ [%s]" 							<wallswitch>	(gWZ)			{channel="zwave:device:7b5154ec:node28:switch_binary"}
Switch dAlarmSwitch_FL			"Sirene [%s]"										<siren>			(gFL, gAlarm)	{channel="zwave:device:7b5154ec:node13:switch_binary"}
/* 
 * -------
 * sensors
 * -------
 */
// Tür- Fenster Sonsoren
Switch	dBalconyDoor_WZ		"Balkontür [%s]"							<door>		(gDoors, gWZ)			{channel="zwave:device:7b5154ec:node44:sensor_binary"}
// zwave:device:7b5154ec:node15:sensor_door
Number	dBalconyDoor_WZ_Batt	"Balkontür Battery [%.1f]"				<batterylevel> (gDevices)				{channel="zwave:device:7b5154ec:node44:battery-level"}
Contact	dFrontDoor_FL			"Eingangstür [%s]"						<frontdoor>		(gDoors, gFL)			{channel="zwave:device:7b5154ec:node27:sensor_door"}
Number	dFrontDoor_FL_Batt	"Eingangstür Battery [%.1f]"			<batterylevel> (gDevices)				{channel="zwave:device:7b5154ec:node27:battery-level"}
// Smoke Sensor Flur
Switch	dSmokeSensor_FL		"Rauchmelder FL [%s]"					<smoke>			(gFL, gAlarm)			{channel="zwave:device:7b5154ec:node41:alarm_smoke"}
Number	dSmokeSensor_FL_Battery	"Rauchmelder FL Battery [%.1f]"	<batterylevel> (gDevices)				{channel="zwave:device:7b5154ec:node41:battery-level"}
// Switch	dSmokeSensor_FL_Battery_Alarm	"Rauchmelder FL Battery Alarm [%s]"	<batterylevel>	(gDevices)	{channel="zwave:device:7b5154ec:node41:alarm_battery"}
Number	dTempSmokeSensor_FL	"Flur Temperatur [%.1f °C]"		   <temperature>	(gFL, gHZ)					{channel="zwave:device:7b5154ec:node41:sensor_temperature"}
// Smoke Sensor Esszimmer
Switch	dSmokeSensor_EZ		"Rauchmelder EZ [%s]"					<smoke>			(gEZ, gAlarm)			{channel="zwave:device:7b5154ec:node16:alarm_smoke"}
Number 	dSmokeSensor_EZ_Battery	"Rauchmelder EZ Battery [%.1f]"	<batterylevel> (gDevices)				{channel="zwave:device:7b5154ec:node16:battery-level"}
// Switch 	dSmokeSensor_EZ_Battery_Alarm	"Rauchmelder EZ Battery Alarm [%s]"	<batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node16:alarm_battery"}
Number 	dTempSmokeSensor_EZ	"Esszimmer Temperatur [%.1f °C]"						<temperature>	(gEZ, gHZ)	{channel="zwave:device:7b5154ec:node16:sensor_temperature"}
// Motion Sensor
Switch	dMotionSensor_FL				"Bewegungsmelder [%s]"							<motion>			(gFL)	{channel="zwave:device:7b5154ec:node8:alarm_motion"}
Number	dMotionSensor_FL_Temp		"Bewegungsmelder Temperatur [%.1f °C]"		<temperature>	(gFL)	{channel="zwave:device:7b5154ec:node8:sensor_temperature"}
Number	dMotionSensor_FL_Lumi		"Bewegungsmelder Helligkeit [%.1f]"			<lightbulb>		(gFL)	{channel="zwave:device:7b5154ec:node8:sensor_luminance"}
Number	dMotionSensor_FL_Battery	"Bewegungsmelder Battery [%.1f]"				<batterylevel> (gDevices)	{channel="zwave:device:7b5154ec:node8:battery-level"}
// Wassermelder
Switch	dFloodSensor_KU				"Wassersensor Küche"								<water>			(gKU, gAlarm)	{channel="zwave:device:7b5154ec:node4:alarm_flood"}
/* 
 * -------------------------
 * SONOS Items zur Steuerung
 * -------------------------
 */
//  Alexa
Switch vSonosOnOff				"Sonos [%s]"					<switch>		(gSO, gSonos)	["Switchable"]
String vSonosDebug				"Sonos: Debug [%s]"			<text>		(gSO)
// Item zur Festlegung des jeweiligen Players über HABPanel knob
// => mögliche Werte: 1=Schlafzimmer, 2=Bad, 3=Wohnzimmer
// => Weitergabe der Werte mittels rule an vSonosActivePlayer   
Number vSonosActivePlayerNum	"Sonos: Player festlegen [%s]"
// Item zur Festlegung des jeweiligen Players
// => mögliche Werte: Schlafzimmer, Bad, Wohnzimmer 
String vSonosActivePlayer		"Sonos: Legt den aktiven Player fest"	<text>			(gSO)
// Item zur Auswahl der Play Liste über ein HABPanel knob 
// => wird dann an das Item dSonosPLAY11PlayList oder dSonosPLAY12PlayList oder dSonosCONNECTPlayList übergeben
// => wir über eine rule zugeordnet
// => in Abhängigkeit von vSonosActivePlayer 
Number vSonosPlayList			"Play List [%s]"						<text>			(gSO)
// Item zur Auswahl der Radio Station über ein HABPanel knob 
// => wird dann an das Item dSonosPLAY11PlayRadio oder dSonosPLAY12PlayRadio oder dSonosCONNECTPlayRadio übergeben
// => wir über eine rule zugeordnet
// => in Abhängigkeit von vSonosActivePlayer 
Number vSonosPlayRadio			"Radio Station (virtuell) [%s]"			<text>			(gSO)
// Aktueller Künstler
// => wird über eine rule an die Items der Channel übergeben - wie oben
String vSonosCurrentArtist 		"Artist (virtuell) [%s]" 				<text>			(gSO)
// Aktueller Titel
// => wird über eine rule an die Items der Channel übergeben - wie oben
String vSonosCurrentTitle 		"Titel (virtuell) [%s]" 				<text>			(gSO)
// Control PLAY PAUSE NEXT PREVIOUS
// => wird über eine rule an die Items der Channel übergeben - wie oben
Player vSonosControler			 "Control (virtuell) [%s]"				<receiver>		(gSO)
// Control NEXT PREVIOUS
// => wird über eine rule an die Items der Channel übergeben - wie oben
String vSonosControlerNEXTPREV			 "Control (virtuell) [%s]"				<receiver>		(gSO)
// Volume
// => wird über eine rule an die Items der Channel übergeben - wie oben
Dimmer vSonosVolume				"Volume (virtuell) [%.1f %%]"		<soundvolume>	(gSO)
// Mute
// => wird über eine rule an die Items der Channel übergeben - wie oben
Switch vSonosMute				"Mute (virtuell) [%s]"			<soundvolume_mute>	(gSO)
// Wecker
Switch vSonosCalDav_OnOff		"Sonos An / Aus"						<switch>	(gAC)
/*
 * -----
 * SONOS PLAY:1-3
 * -----
 */
Image  dSonosPLAY13CurrentAlbumArt "Album Art" 				<video>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:currentalbumart"}
String dSonosPLAY13CurrentArtist "Artist [%s]" 				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:currentartist"}
String dSonosPLAY13CurrentTitle 	"Titel [%s]" 				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:currenttitle"}
String dSonosPLAY13CurrentAlbum 	"Album [%s]"				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:currentalbum"}
String dSonosPLAY13PlayList	 	"Play List [%s]"			<text>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:playlist"}
String dSonosPLAY13PlayRadio	 	"Radio Station [%s]"		<text>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:radio"}
Player dSonosPLAY13Controler	 	"Control"					<receiver>				(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:control"}
Dimmer dSonosPLAY13Volume			"Volume [%.1f %%]"		<soundvolume>			(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:volume"}
Switch dSonosPLAY13Mute				"Mute"						<soundvolume_mute>	(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:mute"}
Switch dSonosPLAY13AlarmON    	"Alarm [%s]"				<switch>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:alarm"}
Number dSonosPLAY13Snooze			"Snooze"						<clock>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:snooze"}
Switch dSonosPLAY13Stop				"Stop"						<switch>					(gSO)	{channel="sonos:PLAY1:RINCON_7828CA6C1C1801400:stop"}
//
/*
 * -----
 * SONOS ONE
 * -----
 */
Image	dSonosONECurrentAlbumArt "Album Art" 				<video>					(gSO) {channel="sonos:One:RINCON_7828CA073F1601400:currentalbumart"}
String dSonosONECurrentArtist "Artist [%s]" 				<text>					(gSO) {channel="sonos:One:RINCON_7828CA073F1601400:currentartist"}
String dSonosONECurrentTitle 	"Titel [%s]" 				<text>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:currenttitle"}
String dSonosONECurrentAlbum 	"Album [%s]"				<text>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:currentalbum"}
String dSonosONEPlayList	 	"Play List [%s]"			<text>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:playlist"}
String dSonosONEPlayRadio	 	"Radio Station [%s]"		<text>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:radio"}
Player dSonosONEControler	 	"Control"					<receiver>				(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:control"}
Dimmer dSonosONEVolume			"Volume [%.1f %%]"		<soundvolume>			(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:volume"}
Switch dSonosONEMute				"Mute"						<soundvolume_mute>	(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:mute"}
Switch dSonosONEAlarmON    	"Alarm [%s]"				<switch>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:alarm"}
Number dSonosONESnooze			"Snooze"						<clock>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:snooze"}
Switch dSonosONEStop				"Stop"						<switch>					(gSO)	{channel="sonos:One:RINCON_7828CA073F1601400:stop"}
/* 
 * Items mit indirektem Bezug zu einem Channel
 * => alle Items beginnen mit v
 */
// Item zur Speicherung der Nummer der Play List
// => erhält den Wert von vSonosPlayList - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY11PlayList	 			"Sonos: Play List [%s]"								<text>		(gSO)
// Item zur Speicherung der Nummer der Radio Station
// => erhält den Wert von vSonosPlayRadio - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY11PlayRadio	 			"Sonos: Radio Station PLAY11 [%s]"				<text>		(gSO)
/* 
 * Items mit indirektem Bezug zu einem Channel die für den Wecker (Alarm Clock) benötigt werden
 * => alle Items beginnen mit v
 */
// Item zum Einschalten des Alarms für den Wecker des PLAY:1-1 - Alexa
Switch vAlarmClockSonosONE				"Wecker im Schlafzimmer [%s]"								<clock>		(gAC)
Number vSonosONEVolumeAC				"Wecker Lautstärke"											<text>		(gAC)
// Item zur Auswahl der Play Liste des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosONEWeckerPlayList2 übergeben 
Number vSonosONEWeckerPlayList		"Wecker Play List Schlafzimmer [%d]"					<text>		(gAC)
String vSonosONEWeckerPlayList2		"Wecker Play List Schlafzimmer [%s]"					<text>		(gAC)
// Item zur Auswahl der Radio Station des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosONEWeckerPlayRadio2 übergeben 
Number vSonosONEWeckerPlayRadio		"Wecker Radio Station Schlafzimmer [%d]"				<text>		(gAC)
String vSonosONEWeckerPlayRadio2		"Wecker Radio Station Schlafzimmer [%s]"				<text>		(gAC)
//Item zum Wechsel zwischen Radio Station und Play List
// => Switch == ON => Radio Station / Switch == OFF => Play List
Switch vSonosONEWeckerRadioPlayList "Wecker switch Radio Play List Schlafzimmer [%s]"	<switch>	(gAC)
// Item zur Festlegung der Snooze Zeit für den Wecker des PLAY1-1
// => wird in der rule vSonosSnooze benutzt
// => erhält den Wert von vSonoSnooze
Number vSonosSnoozeTimeONE				"Virtuelle Snooze Zeit Schlafzimmer [%d]"				<clock>		(gAC)
// Item zum Einschalten des Snooze für ONE
// => wird gesetzt wenn (vAlarmClockSonosONE == ON) ist
Switch vSonosSnoozeONE					"Virtuelles Snooze Schlafzimmer [%d]"					<switch>		(gAC)
/*
 * -----
 * SONOS PLAY:1-1
 * -----
 */
Image dSonosPLAY11CurrentAlbumArt "Album Art" 				<video>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:currentalbumart"}
String dSonosPLAY11CurrentArtist "Artist [%s]" 				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:currentartist"}
String dSonosPLAY11CurrentTitle 	"Titel [%s]" 				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:currenttitle"}
String dSonosPLAY11CurrentAlbum 	"Album [%s]"				<text>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:currentalbum"}
String dSonosPLAY11PlayList	 	"Play List [%s]"			<text>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:playlist"}
String dSonosPLAY11PlayRadio	 	"Radio Station [%s]"		<text>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:radio"}
Player dSonosPLAY11Controler	 	"Control"					<receiver>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:control"}
Dimmer dSonosPLAY11Volume			"Volume [%.1f %%]"		<soundvolume>			(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:volume"}
Switch dSonosPLAY11Mute				"Mute"						<soundvolume_mute>	(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:mute"}
Switch dSonosPLAY11AlarmON    	"Alarm [%s]"				<switch>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:alarm"}
Number dSonosPLAY11Snooze			"Snooze"						<clock>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:snooze"}
Switch dSonosPLAY11Stop				"Stop"						<switch>					(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A89401400:stop"}
/* 
 * Items mit indirektem Bezug zu einem Channel
 * => alle Items beginnen mit v
 */
// Item zur Speicherung der Nummer der Play List
// => erhält den Wert von vSonosPlayList - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY11PlayList	 			"Sonos: Play List [%s]"								<text>		(gSO)
// Item zur Speicherung der Nummer der Radio Station
// => erhält den Wert von vSonosPlayRadio - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY11PlayRadio	 			"Sonos: Radio Station PLAY11 [%s]"				<text>		(gSO)
/* 
 * Items mit indirektem Bezug zu einem Channel die für den Wecker (Alarm Clock) benötigt werden
 * => alle Items beginnen mit v
 */
// Item zum Einschalten des Alarms für den Wecker des PLAY:1-1 - Alexa
Switch vAlarmClockSonosPLAY11				"Wecker im Schlafzimmer [%s]"								<clock>	(gAC)
Number vSonosPLAY11VolumeAC				"Wecker Lautstärke"											<text>	(gAC)
// Item zur Auswahl der Play Liste des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosPLAY11WeckerPlayList2 übergeben 
Number vSonosPLAY11WeckerPlayList		"Wecker Play List Schlafzimmer [%d]"					<text>	(gAC)
String vSonosPLAY11WeckerPlayList2		"Wecker Play List Schlafzimmer [%s]"					<text>	(gAC)
// Item zur Auswahl der Radio Station des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosPLAY11WeckerPlayRadio2 übergeben 
Number vSonosPLAY11WeckerPlayRadio		"Wecker Radio Station Schlafzimmer [%d]"				<text>	(gAC)
String vSonosPLAY11WeckerPlayRadio2		"Wecker Radio Station Schlafzimmer [%s]"				<text>	(gAC)
//Item zum Wechsel zwischen Radio Station und Play List
// => Switch == ON => Radio Station / Switch == OFF => Play List
Switch vSonosPLAY11WeckerRadioPlayList "Wecker switch Radio Play List Schlafzimmer [%s]"	<switch>	(gAC)
// Item zur Festlegung der Snooze Zeit für den Wecker des PLAY1-1
// => wird in der rule vSonosSnooze benutzt
// => erhält den Wert von vSonoSnooze
Number vSonosSnoozeTimePLAY11				"Virtuelle Snooze Zeit Schlafzimmer [%d]"				<clock>	(gAC)
// Item zum Einschalten des Snooze für PLAY1-1
// => wird gesetzt wenn (vAlarmClockSonosPLAY11 == ON) ist
Switch vSonosSnoozePLAY11					"Virtuelles Snooze Schlafzimmer [%d]"					<switch>	(gAC)
/*
 * -----
 * Sonos PLAY:1-2
 * -----
 */
Image dSonosPLAY12CurrentAlbumArt "Album Art" 			<video>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:currentalbumart"}
String dSonosPLAY12CurrentArtist "Artist [%s]" 			<text>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:currentartist"}
String dSonosPLAY12CurrentTitle 	"Titel [%s]" 			<text>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:currenttitle"}
String dSonosPLAY12CurrentAlbum 	"Album [%s]"			<text>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:currentalbum"}
String dSonosPLAY12PlayList	 	"Play List [%s]"		<text>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:playlist"}
String dSonosPLAY12PlayRadio	 	"Radio Station [%s]"	<text>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:radio"}
Player dSonosPLAY12Controler	 	"Control"				<receiver>			(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:control"}
Dimmer dSonosPLAY12Volume			"Volume [%.1f %%]"	<soundvolume>		(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:volume"}
Switch dSonosPLAY12Mute				"Mute"					<soundvolume_mute> (gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:mute"}
Switch dSonosPLAY12AlarmON    	"Alarm [%s]"			<switch>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:alarm"}
Number dSonosPLAY12Snooze			"Snooze"					<clock>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:snooze"}
Switch dSonosPLAY12Stop				"Stop"					<switch>				(gSO)	{channel="sonos:PLAY1:RINCON_000E58C9A86201400:stop"}
/* 
 * Items mit indirektem Bezug zu einem Channel
 * => alle Items beginnen mit v
 */
// Item zur Speicherung der Nummer der Play List
// => erhält den Wert von vSonosPlayList - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY12PlayList	 			"Sonos: Play List [%s]"								<text>		(gSO)
// Item zur Speicherung der Nummer der Radio Station
// => erhält den Wert von vSonosPlayRadio - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
//Number vSonosPLAY12PlayRadio	 			"Sonos: Radio Station PLAY12 [%s]"				<text>		(gSO)
/* 
 * Items mit indirektem Bezug zu einem Channel die für den Wecker (Alarm Clock) benötigt werden
 * => alle Items beginnen mit v
 */
// Item zum Einschalten des Alarms für den Wecker des PLAY1-1
Switch vAlarmClockSonosPLAY12				"Wecker Sonos PLAY12 ON [%s]"								<clock>		(gAC)
// Item zur Auswahl der Play Liste des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosPLAY12WeckerPlayList2 übergeben 
Number vSonosPLAY12WeckerPlayList		"Sonos: Wecker Play List PLAY12 [%d]"					<text>		(gAC)
String vSonosPLAY12WeckerPlayList2		"Sonos: Wecker Play List PLAY12 [%s]"					<text>		(gAC)
// Item zur Auswahl der Radio Station des Weckers über ein HABPanel knob 
// => wird dann an das Item vSonosPLAY12WeckerPlayRadio2 übergeben 
Number vSonosPLAY12WeckerPlayRadio		"Sonos: Wecker Radio Station PLAY12 [%d]"				<text>		(gAC)
String vSonosPLAY12WeckerPlayRadio2		"Sonos: Wecker Radio Station PLAY12 [%s]"				<text>		(gAC)
// Item zum Wechsel zwischen Radio Station und Play List
// => Switch == ON => Radio Station / Switch == OFF => Play List
Switch vSonosPLAY12WeckerRadioPlayList "Sonos: Wecker switch Radio Play List PLAY12 [%s]"	<switch>	(gAC)
// Item zur Festlegung der Snooze Zeit für den Wecker des PLAY1-1
// => wird in der rule vSonosSnooze benutzt
// => erhält den Wert von vSonoSnooze
Number vSonosSnoozeTimePLAY12				"Sonos: Virtuelle Snooze Zeit PLAY12 [%d]"			<clock>		(gAC)
// Item zum Einschalten des Snooze für PLAY1-1
// => wird gesetzt wenn (vAlarmClockSonosPLAY12 == ON) ist
Switch vSonosSnoozePLAY12					"Sonos: Virtuelles Snooze AN/AUS PLAY12 [%d]"		<switch>	(gAC)
/*
 * -----
 * Sonos CONNECT
 * -----
 */
Image dSonosCONNECTCurrentAlbumArt	"Album Art" 			<video>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:currentalbumart"}
String dSonosCONNECTCurrentArtist	"Artist [%s]" 			<text>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:currentartist"}
String dSonosCONNECTCurrentTitle 	"Titel [%s]" 			<text>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:currenttitle"}
String dSonosCONNECTCurrentAlbum 	"Album [%s]"			<text>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:currentalbum"}
String dSonosCONNECTPlayList			"Play List [%s]"		<text>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:playlist"}
String dSonosCONNECTPlayRadio			"Radio Station [%s]"	<text>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:radio"}
Player dSonosCONNECTControler			"Control"				<receiver>				(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:control"}
Dimmer dSonosCONNECTVolume				"Volume [%.1f %%]"	<soundvolume>			(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:volume"}
Switch dSonosCONNECTMute				"Mute"					<soundvolume_mute>	(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:mute"}
Switch dSonosCONNECTAlarmON    		"Alarm [%s]"			<switch>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:alarm"}
Number dSonosCONNECTSnooze				"Snooze"					<clock>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:snooze"}
Switch dSonosCONNECTStop				"Stop"					<switch>					(gSO)	{channel="sonos:CONNECT:RINCON_B8E93790C2A401400:stop"}
/* 
 * Items mit indirektem Bezug zu einem Channel
 * => alle Items beginnen mit v
 */
// Item zur Speicherung der Nummer der Play List
// => erhält den Wert von vSonosPlayList - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
Number vSonosCONNECTPlayList	 	"Play List [%s]"			<text>					(gSO)
// Item zur Speicherung der Nummer der Radio Station
// => erhält den Wert von vSonosPlayRadio - über ein HABPAnel knob
// => in Abhängigkeit von vSonosActivePlayer 
Number vSonosCONNECTPlayRadio	 	"Radio Station [%s]"		<text>					(gSO)
/*
 * -------------
 * date and time
 * -------------
 */
DateTime dCurrentDate		"Aktuelles Datum  [%1$tA, %1$td.%1$tm.%1$tY]"   <calendar> {channel="ntp:ntp:local:dateTime" }
//DateTime dCurrentTime		"Aktuelle Uhrzeit"								<clock>		// {channel="npd:}

/*
 * ---------
 * astronomy
 * ---------
 */
DateTime	dSunriseTime   "Sonnenaufgang [%1$tH:%1$tM]"		<sunrise>	(gAS)	{channel = "astro:sun:local:rise#start" }
DateTime	dSunsetTime    "Sonnenuntergang [%1$tH:%1$tM]" 	<sunset>    (gAS)	{channel = "astro:sun:local:set#start" }
DateTime	dMoonriseTime  "Mondaufgang [%1$tH:%1$tM]"		<sunrise>   (gAS)	{channel = "astro:moon:local:rise#start" }
DateTime	dMoonsetTime   "Monduntergang [%1$tH:%1$tM]"		<sunset>    (gAS)	{channel = "astro:moon:local:set#start" }
DateTime	dMoonFull		"Vollmond"								<moon>      (gAS)	{channel = "astro:moon:local:phase#full" }
String	dMoonPhase     "Mond Phase [%s]"						<moon>      (gAS)	{channel = "astro:moon:local:phase#name" }

/*
 * ------
 * weather
 * ------
 */
String dCurrentConditions_WU	"Wetterbedingungen"						<sun_clouds>	(gWE)	{channel="weatherunderground:weather:b6f874f0:current#conditions"}
Number dCurrentTemperature_WU	"Temperatur [%.1f °C]"					<temperature>	(gWE)	{channel="weatherunderground:weather:b6f874f0:current#temperature"}
Number dCurrentHumidity_WU		"Luftfeuchtigkeit"						<humidity>		(gWE)	{channel="weatherunderground:weather:b6f874f0:current#relativeHumidity"}
Number dCurrentWindSpeed_WU	"Windgeschwindigkeit [%.1f kM/h]"	<wind>			(gWE)	{channel="weatherunderground:weather:b6f874f0:current#windSpeed"}
/*
 * -------------------------
 * battery status of devices
 * -------------------------
 */

/*
 * -------
 * network
 * -------
 */
Switch dAndisHandy		"Andis Handy [%s]"							<network>	(gNetwork) {channel="network:device:192_168_1_9:online"}
Switch dYarasHandy		"Yaras Handy [%s]"							<network>	(gNetwork) {channel="network:device:192_168_1_16:online"}
Switch dDLinkDAP2610		"D-Link DAP-2610 WLAN Router [%s]"		<network>	(gNetwork) {channel="network:device:192_168_1_50:online"}
Switch dNetgearRouter	"Netgear Router [%s]"						<network>	(gNetwork) {channel="network:device:192_168_1_1:online"}
Switch dNetgearGS108PE	"Netgear GS108PE 8-Port Switch [%s]"	<network>	(gNetwork) {channel="network:device:192_168_1_30:online"}
